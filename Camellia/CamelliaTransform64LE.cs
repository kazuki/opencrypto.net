// 
// Copyright (c) 2006, Kazuki Oikawa
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// 
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

using System;
using System.Security.Cryptography;

namespace openCrypto
{
	/// <summary>
	/// <ja>Camelliaの64bit実装</ja>
	/// </summary>
	internal sealed class CamelliaTransform64LE : SymmetricTransform
	{
		#region SP
		static ulong[] SP1 = new ulong[] {
			0x7000007000707070, 0x8200008200828282, 0x2c00002c002c2c2c, 0xec0000ec00ececec,
			0xb30000b300b3b3b3, 0x2700002700272727, 0xc00000c000c0c0c0, 0xe50000e500e5e5e5,
			0xe40000e400e4e4e4, 0x8500008500858585, 0x5700005700575757, 0x3500003500353535,
			0xea0000ea00eaeaea, 0x0c00000c000c0c0c, 0xae0000ae00aeaeae, 0x4100004100414141,
			0x2300002300232323, 0xef0000ef00efefef, 0x6b00006b006b6b6b, 0x9300009300939393,
			0x4500004500454545, 0x1900001900191919, 0xa50000a500a5a5a5, 0x2100002100212121,
			0xed0000ed00ededed, 0x0e00000e000e0e0e, 0x4f00004f004f4f4f, 0x4e00004e004e4e4e,
			0x1d00001d001d1d1d, 0x6500006500656565, 0x9200009200929292, 0xbd0000bd00bdbdbd,
			0x8600008600868686, 0xb80000b800b8b8b8, 0xaf0000af00afafaf, 0x8f00008f008f8f8f,
			0x7c00007c007c7c7c, 0xeb0000eb00ebebeb, 0x1f00001f001f1f1f, 0xce0000ce00cecece,
			0x3e00003e003e3e3e, 0x3000003000303030, 0xdc0000dc00dcdcdc, 0x5f00005f005f5f5f,
			0x5e00005e005e5e5e, 0xc50000c500c5c5c5, 0x0b00000b000b0b0b, 0x1a00001a001a1a1a,
			0xa60000a600a6a6a6, 0xe10000e100e1e1e1, 0x3900003900393939, 0xca0000ca00cacaca,
			0xd50000d500d5d5d5, 0x4700004700474747, 0x5d00005d005d5d5d, 0x3d00003d003d3d3d,
			0xd90000d900d9d9d9, 0x0100000100010101, 0x5a00005a005a5a5a, 0xd60000d600d6d6d6,
			0x5100005100515151, 0x5600005600565656, 0x6c00006c006c6c6c, 0x4d00004d004d4d4d,
			0x8b00008b008b8b8b, 0x0d00000d000d0d0d, 0x9a00009a009a9a9a, 0x6600006600666666,
			0xfb0000fb00fbfbfb, 0xcc0000cc00cccccc, 0xb00000b000b0b0b0, 0x2d00002d002d2d2d,
			0x7400007400747474, 0x1200001200121212, 0x2b00002b002b2b2b, 0x2000002000202020,
			0xf00000f000f0f0f0, 0xb10000b100b1b1b1, 0x8400008400848484, 0x9900009900999999,
			0xdf0000df00dfdfdf, 0x4c00004c004c4c4c, 0xcb0000cb00cbcbcb, 0xc20000c200c2c2c2,
			0x3400003400343434, 0x7e00007e007e7e7e, 0x7600007600767676, 0x0500000500050505,
			0x6d00006d006d6d6d, 0xb70000b700b7b7b7, 0xa90000a900a9a9a9, 0x3100003100313131,
			0xd10000d100d1d1d1, 0x1700001700171717, 0x0400000400040404, 0xd70000d700d7d7d7,
			0x1400001400141414, 0x5800005800585858, 0x3a00003a003a3a3a, 0x6100006100616161,
			0xde0000de00dedede, 0x1b00001b001b1b1b, 0x1100001100111111, 0x1c00001c001c1c1c,
			0x3200003200323232, 0x0f00000f000f0f0f, 0x9c00009c009c9c9c, 0x1600001600161616,
			0x5300005300535353, 0x1800001800181818, 0xf20000f200f2f2f2, 0x2200002200222222,
			0xfe0000fe00fefefe, 0x4400004400444444, 0xcf0000cf00cfcfcf, 0xb20000b200b2b2b2,
			0xc30000c300c3c3c3, 0xb50000b500b5b5b5, 0x7a00007a007a7a7a, 0x9100009100919191,
			0x2400002400242424, 0x0800000800080808, 0xe80000e800e8e8e8, 0xa80000a800a8a8a8,
			0x6000006000606060, 0xfc0000fc00fcfcfc, 0x6900006900696969, 0x5000005000505050,
			0xaa0000aa00aaaaaa, 0xd00000d000d0d0d0, 0xa00000a000a0a0a0, 0x7d00007d007d7d7d,
			0xa10000a100a1a1a1, 0x8900008900898989, 0x6200006200626262, 0x9700009700979797,
			0x5400005400545454, 0x5b00005b005b5b5b, 0x1e00001e001e1e1e, 0x9500009500959595,
			0xe00000e000e0e0e0, 0xff0000ff00ffffff, 0x6400006400646464, 0xd20000d200d2d2d2,
			0x1000001000101010, 0xc40000c400c4c4c4, 0x0000000000000000, 0x4800004800484848,
			0xa30000a300a3a3a3, 0xf70000f700f7f7f7, 0x7500007500757575, 0xdb0000db00dbdbdb,
			0x8a00008a008a8a8a, 0x0300000300030303, 0xe60000e600e6e6e6, 0xda0000da00dadada,
			0x0900000900090909, 0x3f00003f003f3f3f, 0xdd0000dd00dddddd, 0x9400009400949494,
			0x8700008700878787, 0x5c00005c005c5c5c, 0x8300008300838383, 0x0200000200020202,
			0xcd0000cd00cdcdcd, 0x4a00004a004a4a4a, 0x9000009000909090, 0x3300003300333333,
			0x7300007300737373, 0x6700006700676767, 0xf60000f600f6f6f6, 0xf30000f300f3f3f3,
			0x9d00009d009d9d9d, 0x7f00007f007f7f7f, 0xbf0000bf00bfbfbf, 0xe20000e200e2e2e2,
			0x5200005200525252, 0x9b00009b009b9b9b, 0xd80000d800d8d8d8, 0x2600002600262626,
			0xc80000c800c8c8c8, 0x3700003700373737, 0xc60000c600c6c6c6, 0x3b00003b003b3b3b,
			0x8100008100818181, 0x9600009600969696, 0x6f00006f006f6f6f, 0x4b00004b004b4b4b,
			0x1300001300131313, 0xbe0000be00bebebe, 0x6300006300636363, 0x2e00002e002e2e2e,
			0xe90000e900e9e9e9, 0x7900007900797979, 0xa70000a700a7a7a7, 0x8c00008c008c8c8c,
			0x9f00009f009f9f9f, 0x6e00006e006e6e6e, 0xbc0000bc00bcbcbc, 0x8e00008e008e8e8e,
			0x2900002900292929, 0xf50000f500f5f5f5, 0xf90000f900f9f9f9, 0xb60000b600b6b6b6,
			0x2f00002f002f2f2f, 0xfd0000fd00fdfdfd, 0xb40000b400b4b4b4, 0x5900005900595959,
			0x7800007800787878, 0x9800009800989898, 0x0600000600060606, 0x6a00006a006a6a6a,
			0xe70000e700e7e7e7, 0x4600004600464646, 0x7100007100717171, 0xba0000ba00bababa,
			0xd40000d400d4d4d4, 0x2500002500252525, 0xab0000ab00ababab, 0x4200004200424242,
			0x8800008800888888, 0xa20000a200a2a2a2, 0x8d00008d008d8d8d, 0xfa0000fa00fafafa,
			0x7200007200727272, 0x0700000700070707, 0xb90000b900b9b9b9, 0x5500005500555555,
			0xf80000f800f8f8f8, 0xee0000ee00eeeeee, 0xac0000ac00acacac, 0x0a00000a000a0a0a,
			0x3600003600363636, 0x4900004900494949, 0x2a00002a002a2a2a, 0x6800006800686868,
			0x3c00003c003c3c3c, 0x3800003800383838, 0xf10000f100f1f1f1, 0xa40000a400a4a4a4,
			0x4000004000404040, 0x2800002800282828, 0xd30000d300d3d3d3, 0x7b00007b007b7b7b,
			0xbb0000bb00bbbbbb, 0xc90000c900c9c9c9, 0x4300004300434343, 0xc10000c100c1c1c1,
			0x1500001500151515, 0xe30000e300e3e3e3, 0xad0000ad00adadad, 0xf40000f400f4f4f4,
			0x7700007700777777, 0xc70000c700c7c7c7, 0x8000008000808080, 0x9e00009e009e9e9e,
		};
		static ulong[] SP2 = new ulong[] {
			0x0000e0e0e0e0e000, 0x0000050505050500, 0x0000585858585800, 0x0000d9d9d9d9d900,
			0x0000676767676700, 0x00004e4e4e4e4e00, 0x0000818181818100, 0x0000cbcbcbcbcb00,
			0x0000c9c9c9c9c900, 0x00000b0b0b0b0b00, 0x0000aeaeaeaeae00, 0x00006a6a6a6a6a00,
			0x0000d5d5d5d5d500, 0x0000181818181800, 0x00005d5d5d5d5d00, 0x0000828282828200,
			0x0000464646464600, 0x0000dfdfdfdfdf00, 0x0000d6d6d6d6d600, 0x0000272727272700,
			0x00008a8a8a8a8a00, 0x0000323232323200, 0x00004b4b4b4b4b00, 0x0000424242424200,
			0x0000dbdbdbdbdb00, 0x00001c1c1c1c1c00, 0x00009e9e9e9e9e00, 0x00009c9c9c9c9c00,
			0x00003a3a3a3a3a00, 0x0000cacacacaca00, 0x0000252525252500, 0x00007b7b7b7b7b00,
			0x00000d0d0d0d0d00, 0x0000717171717100, 0x00005f5f5f5f5f00, 0x00001f1f1f1f1f00,
			0x0000f8f8f8f8f800, 0x0000d7d7d7d7d700, 0x00003e3e3e3e3e00, 0x00009d9d9d9d9d00,
			0x00007c7c7c7c7c00, 0x0000606060606000, 0x0000b9b9b9b9b900, 0x0000bebebebebe00,
			0x0000bcbcbcbcbc00, 0x00008b8b8b8b8b00, 0x0000161616161600, 0x0000343434343400,
			0x00004d4d4d4d4d00, 0x0000c3c3c3c3c300, 0x0000727272727200, 0x0000959595959500,
			0x0000ababababab00, 0x00008e8e8e8e8e00, 0x0000bababababa00, 0x00007a7a7a7a7a00,
			0x0000b3b3b3b3b300, 0x0000020202020200, 0x0000b4b4b4b4b400, 0x0000adadadadad00,
			0x0000a2a2a2a2a200, 0x0000acacacacac00, 0x0000d8d8d8d8d800, 0x00009a9a9a9a9a00,
			0x0000171717171700, 0x00001a1a1a1a1a00, 0x0000353535353500, 0x0000cccccccccc00,
			0x0000f7f7f7f7f700, 0x0000999999999900, 0x0000616161616100, 0x00005a5a5a5a5a00,
			0x0000e8e8e8e8e800, 0x0000242424242400, 0x0000565656565600, 0x0000404040404000,
			0x0000e1e1e1e1e100, 0x0000636363636300, 0x0000090909090900, 0x0000333333333300,
			0x0000bfbfbfbfbf00, 0x0000989898989800, 0x0000979797979700, 0x0000858585858500,
			0x0000686868686800, 0x0000fcfcfcfcfc00, 0x0000ececececec00, 0x00000a0a0a0a0a00,
			0x0000dadadadada00, 0x00006f6f6f6f6f00, 0x0000535353535300, 0x0000626262626200,
			0x0000a3a3a3a3a300, 0x00002e2e2e2e2e00, 0x0000080808080800, 0x0000afafafafaf00,
			0x0000282828282800, 0x0000b0b0b0b0b000, 0x0000747474747400, 0x0000c2c2c2c2c200,
			0x0000bdbdbdbdbd00, 0x0000363636363600, 0x0000222222222200, 0x0000383838383800,
			0x0000646464646400, 0x00001e1e1e1e1e00, 0x0000393939393900, 0x00002c2c2c2c2c00,
			0x0000a6a6a6a6a600, 0x0000303030303000, 0x0000e5e5e5e5e500, 0x0000444444444400,
			0x0000fdfdfdfdfd00, 0x0000888888888800, 0x00009f9f9f9f9f00, 0x0000656565656500,
			0x0000878787878700, 0x00006b6b6b6b6b00, 0x0000f4f4f4f4f400, 0x0000232323232300,
			0x0000484848484800, 0x0000101010101000, 0x0000d1d1d1d1d100, 0x0000515151515100,
			0x0000c0c0c0c0c000, 0x0000f9f9f9f9f900, 0x0000d2d2d2d2d200, 0x0000a0a0a0a0a000,
			0x0000555555555500, 0x0000a1a1a1a1a100, 0x0000414141414100, 0x0000fafafafafa00,
			0x0000434343434300, 0x0000131313131300, 0x0000c4c4c4c4c400, 0x00002f2f2f2f2f00,
			0x0000a8a8a8a8a800, 0x0000b6b6b6b6b600, 0x00003c3c3c3c3c00, 0x00002b2b2b2b2b00,
			0x0000c1c1c1c1c100, 0x0000ffffffffff00, 0x0000c8c8c8c8c800, 0x0000a5a5a5a5a500,
			0x0000202020202000, 0x0000898989898900, 0x0000000000000000, 0x0000909090909000,
			0x0000474747474700, 0x0000efefefefef00, 0x0000eaeaeaeaea00, 0x0000b7b7b7b7b700,
			0x0000151515151500, 0x0000060606060600, 0x0000cdcdcdcdcd00, 0x0000b5b5b5b5b500,
			0x0000121212121200, 0x00007e7e7e7e7e00, 0x0000bbbbbbbbbb00, 0x0000292929292900,
			0x00000f0f0f0f0f00, 0x0000b8b8b8b8b800, 0x0000070707070700, 0x0000040404040400,
			0x00009b9b9b9b9b00, 0x0000949494949400, 0x0000212121212100, 0x0000666666666600,
			0x0000e6e6e6e6e600, 0x0000cecececece00, 0x0000ededededed00, 0x0000e7e7e7e7e700,
			0x00003b3b3b3b3b00, 0x0000fefefefefe00, 0x00007f7f7f7f7f00, 0x0000c5c5c5c5c500,
			0x0000a4a4a4a4a400, 0x0000373737373700, 0x0000b1b1b1b1b100, 0x00004c4c4c4c4c00,
			0x0000919191919100, 0x00006e6e6e6e6e00, 0x00008d8d8d8d8d00, 0x0000767676767600,
			0x0000030303030300, 0x00002d2d2d2d2d00, 0x0000dedededede00, 0x0000969696969600,
			0x0000262626262600, 0x00007d7d7d7d7d00, 0x0000c6c6c6c6c600, 0x00005c5c5c5c5c00,
			0x0000d3d3d3d3d300, 0x0000f2f2f2f2f200, 0x00004f4f4f4f4f00, 0x0000191919191900,
			0x00003f3f3f3f3f00, 0x0000dcdcdcdcdc00, 0x0000797979797900, 0x00001d1d1d1d1d00,
			0x0000525252525200, 0x0000ebebebebeb00, 0x0000f3f3f3f3f300, 0x00006d6d6d6d6d00,
			0x00005e5e5e5e5e00, 0x0000fbfbfbfbfb00, 0x0000696969696900, 0x0000b2b2b2b2b200,
			0x0000f0f0f0f0f000, 0x0000313131313100, 0x00000c0c0c0c0c00, 0x0000d4d4d4d4d400,
			0x0000cfcfcfcfcf00, 0x00008c8c8c8c8c00, 0x0000e2e2e2e2e200, 0x0000757575757500,
			0x0000a9a9a9a9a900, 0x00004a4a4a4a4a00, 0x0000575757575700, 0x0000848484848400,
			0x0000111111111100, 0x0000454545454500, 0x00001b1b1b1b1b00, 0x0000f5f5f5f5f500,
			0x0000e4e4e4e4e400, 0x00000e0e0e0e0e00, 0x0000737373737300, 0x0000aaaaaaaaaa00,
			0x0000f1f1f1f1f100, 0x0000dddddddddd00, 0x0000595959595900, 0x0000141414141400,
			0x00006c6c6c6c6c00, 0x0000929292929200, 0x0000545454545400, 0x0000d0d0d0d0d000,
			0x0000787878787800, 0x0000707070707000, 0x0000e3e3e3e3e300, 0x0000494949494900,
			0x0000808080808000, 0x0000505050505000, 0x0000a7a7a7a7a700, 0x0000f6f6f6f6f600,
			0x0000777777777700, 0x0000939393939300, 0x0000868686868600, 0x0000838383838300,
			0x00002a2a2a2a2a00, 0x0000c7c7c7c7c700, 0x00005b5b5b5b5b00, 0x0000e9e9e9e9e900,
			0x0000eeeeeeeeee00, 0x00008f8f8f8f8f00, 0x0000010101010100, 0x00003d3d3d3d3d00,
		};
		static ulong[] SP3 = new ulong[] {
			0x0038380038380038, 0x0041410041410041, 0x0016160016160016, 0x0076760076760076,
			0x00d9d900d9d900d9, 0x0093930093930093, 0x0060600060600060, 0x00f2f200f2f200f2,
			0x0072720072720072, 0x00c2c200c2c200c2, 0x00abab00abab00ab, 0x009a9a009a9a009a,
			0x0075750075750075, 0x0006060006060006, 0x0057570057570057, 0x00a0a000a0a000a0,
			0x0091910091910091, 0x00f7f700f7f700f7, 0x00b5b500b5b500b5, 0x00c9c900c9c900c9,
			0x00a2a200a2a200a2, 0x008c8c008c8c008c, 0x00d2d200d2d200d2, 0x0090900090900090,
			0x00f6f600f6f600f6, 0x0007070007070007, 0x00a7a700a7a700a7, 0x0027270027270027,
			0x008e8e008e8e008e, 0x00b2b200b2b200b2, 0x0049490049490049, 0x00dede00dede00de,
			0x0043430043430043, 0x005c5c005c5c005c, 0x00d7d700d7d700d7, 0x00c7c700c7c700c7,
			0x003e3e003e3e003e, 0x00f5f500f5f500f5, 0x008f8f008f8f008f, 0x0067670067670067,
			0x001f1f001f1f001f, 0x0018180018180018, 0x006e6e006e6e006e, 0x00afaf00afaf00af,
			0x002f2f002f2f002f, 0x00e2e200e2e200e2, 0x0085850085850085, 0x000d0d000d0d000d,
			0x0053530053530053, 0x00f0f000f0f000f0, 0x009c9c009c9c009c, 0x0065650065650065,
			0x00eaea00eaea00ea, 0x00a3a300a3a300a3, 0x00aeae00aeae00ae, 0x009e9e009e9e009e,
			0x00ecec00ecec00ec, 0x0080800080800080, 0x002d2d002d2d002d, 0x006b6b006b6b006b,
			0x00a8a800a8a800a8, 0x002b2b002b2b002b, 0x0036360036360036, 0x00a6a600a6a600a6,
			0x00c5c500c5c500c5, 0x0086860086860086, 0x004d4d004d4d004d, 0x0033330033330033,
			0x00fdfd00fdfd00fd, 0x0066660066660066, 0x0058580058580058, 0x0096960096960096,
			0x003a3a003a3a003a, 0x0009090009090009, 0x0095950095950095, 0x0010100010100010,
			0x0078780078780078, 0x00d8d800d8d800d8, 0x0042420042420042, 0x00cccc00cccc00cc,
			0x00efef00efef00ef, 0x0026260026260026, 0x00e5e500e5e500e5, 0x0061610061610061,
			0x001a1a001a1a001a, 0x003f3f003f3f003f, 0x003b3b003b3b003b, 0x0082820082820082,
			0x00b6b600b6b600b6, 0x00dbdb00dbdb00db, 0x00d4d400d4d400d4, 0x0098980098980098,
			0x00e8e800e8e800e8, 0x008b8b008b8b008b, 0x0002020002020002, 0x00ebeb00ebeb00eb,
			0x000a0a000a0a000a, 0x002c2c002c2c002c, 0x001d1d001d1d001d, 0x00b0b000b0b000b0,
			0x006f6f006f6f006f, 0x008d8d008d8d008d, 0x0088880088880088, 0x000e0e000e0e000e,
			0x0019190019190019, 0x0087870087870087, 0x004e4e004e4e004e, 0x000b0b000b0b000b,
			0x00a9a900a9a900a9, 0x000c0c000c0c000c, 0x0079790079790079, 0x0011110011110011,
			0x007f7f007f7f007f, 0x0022220022220022, 0x00e7e700e7e700e7, 0x0059590059590059,
			0x00e1e100e1e100e1, 0x00dada00dada00da, 0x003d3d003d3d003d, 0x00c8c800c8c800c8,
			0x0012120012120012, 0x0004040004040004, 0x0074740074740074, 0x0054540054540054,
			0x0030300030300030, 0x007e7e007e7e007e, 0x00b4b400b4b400b4, 0x0028280028280028,
			0x0055550055550055, 0x0068680068680068, 0x0050500050500050, 0x00bebe00bebe00be,
			0x00d0d000d0d000d0, 0x00c4c400c4c400c4, 0x0031310031310031, 0x00cbcb00cbcb00cb,
			0x002a2a002a2a002a, 0x00adad00adad00ad, 0x000f0f000f0f000f, 0x00caca00caca00ca,
			0x0070700070700070, 0x00ffff00ffff00ff, 0x0032320032320032, 0x0069690069690069,
			0x0008080008080008, 0x0062620062620062, 0x0000000000000000, 0x0024240024240024,
			0x00d1d100d1d100d1, 0x00fbfb00fbfb00fb, 0x00baba00baba00ba, 0x00eded00eded00ed,
			0x0045450045450045, 0x0081810081810081, 0x0073730073730073, 0x006d6d006d6d006d,
			0x0084840084840084, 0x009f9f009f9f009f, 0x00eeee00eeee00ee, 0x004a4a004a4a004a,
			0x00c3c300c3c300c3, 0x002e2e002e2e002e, 0x00c1c100c1c100c1, 0x0001010001010001,
			0x00e6e600e6e600e6, 0x0025250025250025, 0x0048480048480048, 0x0099990099990099,
			0x00b9b900b9b900b9, 0x00b3b300b3b300b3, 0x007b7b007b7b007b, 0x00f9f900f9f900f9,
			0x00cece00cece00ce, 0x00bfbf00bfbf00bf, 0x00dfdf00dfdf00df, 0x0071710071710071,
			0x0029290029290029, 0x00cdcd00cdcd00cd, 0x006c6c006c6c006c, 0x0013130013130013,
			0x0064640064640064, 0x009b9b009b9b009b, 0x0063630063630063, 0x009d9d009d9d009d,
			0x00c0c000c0c000c0, 0x004b4b004b4b004b, 0x00b7b700b7b700b7, 0x00a5a500a5a500a5,
			0x0089890089890089, 0x005f5f005f5f005f, 0x00b1b100b1b100b1, 0x0017170017170017,
			0x00f4f400f4f400f4, 0x00bcbc00bcbc00bc, 0x00d3d300d3d300d3, 0x0046460046460046,
			0x00cfcf00cfcf00cf, 0x0037370037370037, 0x005e5e005e5e005e, 0x0047470047470047,
			0x0094940094940094, 0x00fafa00fafa00fa, 0x00fcfc00fcfc00fc, 0x005b5b005b5b005b,
			0x0097970097970097, 0x00fefe00fefe00fe, 0x005a5a005a5a005a, 0x00acac00acac00ac,
			0x003c3c003c3c003c, 0x004c4c004c4c004c, 0x0003030003030003, 0x0035350035350035,
			0x00f3f300f3f300f3, 0x0023230023230023, 0x00b8b800b8b800b8, 0x005d5d005d5d005d,
			0x006a6a006a6a006a, 0x0092920092920092, 0x00d5d500d5d500d5, 0x0021210021210021,
			0x0044440044440044, 0x0051510051510051, 0x00c6c600c6c600c6, 0x007d7d007d7d007d,
			0x0039390039390039, 0x0083830083830083, 0x00dcdc00dcdc00dc, 0x00aaaa00aaaa00aa,
			0x007c7c007c7c007c, 0x0077770077770077, 0x0056560056560056, 0x0005050005050005,
			0x001b1b001b1b001b, 0x00a4a400a4a400a4, 0x0015150015150015, 0x0034340034340034,
			0x001e1e001e1e001e, 0x001c1c001c1c001c, 0x00f8f800f8f800f8, 0x0052520052520052,
			0x0020200020200020, 0x0014140014140014, 0x00e9e900e9e900e9, 0x00bdbd00bdbd00bd,
			0x00dddd00dddd00dd, 0x00e4e400e4e400e4, 0x00a1a100a1a100a1, 0x00e0e000e0e000e0,
			0x008a8a008a8a008a, 0x00f1f100f1f100f1, 0x00d6d600d6d600d6, 0x007a7a007a7a007a,
			0x00bbbb00bbbb00bb, 0x00e3e300e3e300e3, 0x0040400040400040, 0x004f4f004f4f004f,
		};
		static ulong[] SP4 = new ulong[] {
			0x7070000070007070, 0x2c2c00002c002c2c, 0xb3b30000b300b3b3, 0xc0c00000c000c0c0,
			0xe4e40000e400e4e4, 0x5757000057005757, 0xeaea0000ea00eaea, 0xaeae0000ae00aeae,
			0x2323000023002323, 0x6b6b00006b006b6b, 0x4545000045004545, 0xa5a50000a500a5a5,
			0xeded0000ed00eded, 0x4f4f00004f004f4f, 0x1d1d00001d001d1d, 0x9292000092009292,
			0x8686000086008686, 0xafaf0000af00afaf, 0x7c7c00007c007c7c, 0x1f1f00001f001f1f,
			0x3e3e00003e003e3e, 0xdcdc0000dc00dcdc, 0x5e5e00005e005e5e, 0x0b0b00000b000b0b,
			0xa6a60000a600a6a6, 0x3939000039003939, 0xd5d50000d500d5d5, 0x5d5d00005d005d5d,
			0xd9d90000d900d9d9, 0x5a5a00005a005a5a, 0x5151000051005151, 0x6c6c00006c006c6c,
			0x8b8b00008b008b8b, 0x9a9a00009a009a9a, 0xfbfb0000fb00fbfb, 0xb0b00000b000b0b0,
			0x7474000074007474, 0x2b2b00002b002b2b, 0xf0f00000f000f0f0, 0x8484000084008484,
			0xdfdf0000df00dfdf, 0xcbcb0000cb00cbcb, 0x3434000034003434, 0x7676000076007676,
			0x6d6d00006d006d6d, 0xa9a90000a900a9a9, 0xd1d10000d100d1d1, 0x0404000004000404,
			0x1414000014001414, 0x3a3a00003a003a3a, 0xdede0000de00dede, 0x1111000011001111,
			0x3232000032003232, 0x9c9c00009c009c9c, 0x5353000053005353, 0xf2f20000f200f2f2,
			0xfefe0000fe00fefe, 0xcfcf0000cf00cfcf, 0xc3c30000c300c3c3, 0x7a7a00007a007a7a,
			0x2424000024002424, 0xe8e80000e800e8e8, 0x6060000060006060, 0x6969000069006969,
			0xaaaa0000aa00aaaa, 0xa0a00000a000a0a0, 0xa1a10000a100a1a1, 0x6262000062006262,
			0x5454000054005454, 0x1e1e00001e001e1e, 0xe0e00000e000e0e0, 0x6464000064006464,
			0x1010000010001010, 0x0000000000000000, 0xa3a30000a300a3a3, 0x7575000075007575,
			0x8a8a00008a008a8a, 0xe6e60000e600e6e6, 0x0909000009000909, 0xdddd0000dd00dddd,
			0x8787000087008787, 0x8383000083008383, 0xcdcd0000cd00cdcd, 0x9090000090009090,
			0x7373000073007373, 0xf6f60000f600f6f6, 0x9d9d00009d009d9d, 0xbfbf0000bf00bfbf,
			0x5252000052005252, 0xd8d80000d800d8d8, 0xc8c80000c800c8c8, 0xc6c60000c600c6c6,
			0x8181000081008181, 0x6f6f00006f006f6f, 0x1313000013001313, 0x6363000063006363,
			0xe9e90000e900e9e9, 0xa7a70000a700a7a7, 0x9f9f00009f009f9f, 0xbcbc0000bc00bcbc,
			0x2929000029002929, 0xf9f90000f900f9f9, 0x2f2f00002f002f2f, 0xb4b40000b400b4b4,
			0x7878000078007878, 0x0606000006000606, 0xe7e70000e700e7e7, 0x7171000071007171,
			0xd4d40000d400d4d4, 0xabab0000ab00abab, 0x8888000088008888, 0x8d8d00008d008d8d,
			0x7272000072007272, 0xb9b90000b900b9b9, 0xf8f80000f800f8f8, 0xacac0000ac00acac,
			0x3636000036003636, 0x2a2a00002a002a2a, 0x3c3c00003c003c3c, 0xf1f10000f100f1f1,
			0x4040000040004040, 0xd3d30000d300d3d3, 0xbbbb0000bb00bbbb, 0x4343000043004343,
			0x1515000015001515, 0xadad0000ad00adad, 0x7777000077007777, 0x8080000080008080,
			0x8282000082008282, 0xecec0000ec00ecec, 0x2727000027002727, 0xe5e50000e500e5e5,
			0x8585000085008585, 0x3535000035003535, 0x0c0c00000c000c0c, 0x4141000041004141,
			0xefef0000ef00efef, 0x9393000093009393, 0x1919000019001919, 0x2121000021002121,
			0x0e0e00000e000e0e, 0x4e4e00004e004e4e, 0x6565000065006565, 0xbdbd0000bd00bdbd,
			0xb8b80000b800b8b8, 0x8f8f00008f008f8f, 0xebeb0000eb00ebeb, 0xcece0000ce00cece,
			0x3030000030003030, 0x5f5f00005f005f5f, 0xc5c50000c500c5c5, 0x1a1a00001a001a1a,
			0xe1e10000e100e1e1, 0xcaca0000ca00caca, 0x4747000047004747, 0x3d3d00003d003d3d,
			0x0101000001000101, 0xd6d60000d600d6d6, 0x5656000056005656, 0x4d4d00004d004d4d,
			0x0d0d00000d000d0d, 0x6666000066006666, 0xcccc0000cc00cccc, 0x2d2d00002d002d2d,
			0x1212000012001212, 0x2020000020002020, 0xb1b10000b100b1b1, 0x9999000099009999,
			0x4c4c00004c004c4c, 0xc2c20000c200c2c2, 0x7e7e00007e007e7e, 0x0505000005000505,
			0xb7b70000b700b7b7, 0x3131000031003131, 0x1717000017001717, 0xd7d70000d700d7d7,
			0x5858000058005858, 0x6161000061006161, 0x1b1b00001b001b1b, 0x1c1c00001c001c1c,
			0x0f0f00000f000f0f, 0x1616000016001616, 0x1818000018001818, 0x2222000022002222,
			0x4444000044004444, 0xb2b20000b200b2b2, 0xb5b50000b500b5b5, 0x9191000091009191,
			0x0808000008000808, 0xa8a80000a800a8a8, 0xfcfc0000fc00fcfc, 0x5050000050005050,
			0xd0d00000d000d0d0, 0x7d7d00007d007d7d, 0x8989000089008989, 0x9797000097009797,
			0x5b5b00005b005b5b, 0x9595000095009595, 0xffff0000ff00ffff, 0xd2d20000d200d2d2,
			0xc4c40000c400c4c4, 0x4848000048004848, 0xf7f70000f700f7f7, 0xdbdb0000db00dbdb,
			0x0303000003000303, 0xdada0000da00dada, 0x3f3f00003f003f3f, 0x9494000094009494,
			0x5c5c00005c005c5c, 0x0202000002000202, 0x4a4a00004a004a4a, 0x3333000033003333,
			0x6767000067006767, 0xf3f30000f300f3f3, 0x7f7f00007f007f7f, 0xe2e20000e200e2e2,
			0x9b9b00009b009b9b, 0x2626000026002626, 0x3737000037003737, 0x3b3b00003b003b3b,
			0x9696000096009696, 0x4b4b00004b004b4b, 0xbebe0000be00bebe, 0x2e2e00002e002e2e,
			0x7979000079007979, 0x8c8c00008c008c8c, 0x6e6e00006e006e6e, 0x8e8e00008e008e8e,
			0xf5f50000f500f5f5, 0xb6b60000b600b6b6, 0xfdfd0000fd00fdfd, 0x5959000059005959,
			0x9898000098009898, 0x6a6a00006a006a6a, 0x4646000046004646, 0xbaba0000ba00baba,
			0x2525000025002525, 0x4242000042004242, 0xa2a20000a200a2a2, 0xfafa0000fa00fafa,
			0x0707000007000707, 0x5555000055005555, 0xeeee0000ee00eeee, 0x0a0a00000a000a0a,
			0x4949000049004949, 0x6868000068006868, 0x3838000038003838, 0xa4a40000a400a4a4,
			0x2828000028002828, 0x7b7b00007b007b7b, 0xc9c90000c900c9c9, 0xc1c10000c100c1c1,
			0xe3e30000e300e3e3, 0xf4f40000f400f4f4, 0xc7c70000c700c7c7, 0x9e9e00009e009e9e,
		};
		static ulong[] SP5 = new ulong[] {
			0xe0e0e000e0e0e000, 0x0505050005050500, 0x5858580058585800, 0xd9d9d900d9d9d900,
			0x6767670067676700, 0x4e4e4e004e4e4e00, 0x8181810081818100, 0xcbcbcb00cbcbcb00,
			0xc9c9c900c9c9c900, 0x0b0b0b000b0b0b00, 0xaeaeae00aeaeae00, 0x6a6a6a006a6a6a00,
			0xd5d5d500d5d5d500, 0x1818180018181800, 0x5d5d5d005d5d5d00, 0x8282820082828200,
			0x4646460046464600, 0xdfdfdf00dfdfdf00, 0xd6d6d600d6d6d600, 0x2727270027272700,
			0x8a8a8a008a8a8a00, 0x3232320032323200, 0x4b4b4b004b4b4b00, 0x4242420042424200,
			0xdbdbdb00dbdbdb00, 0x1c1c1c001c1c1c00, 0x9e9e9e009e9e9e00, 0x9c9c9c009c9c9c00,
			0x3a3a3a003a3a3a00, 0xcacaca00cacaca00, 0x2525250025252500, 0x7b7b7b007b7b7b00,
			0x0d0d0d000d0d0d00, 0x7171710071717100, 0x5f5f5f005f5f5f00, 0x1f1f1f001f1f1f00,
			0xf8f8f800f8f8f800, 0xd7d7d700d7d7d700, 0x3e3e3e003e3e3e00, 0x9d9d9d009d9d9d00,
			0x7c7c7c007c7c7c00, 0x6060600060606000, 0xb9b9b900b9b9b900, 0xbebebe00bebebe00,
			0xbcbcbc00bcbcbc00, 0x8b8b8b008b8b8b00, 0x1616160016161600, 0x3434340034343400,
			0x4d4d4d004d4d4d00, 0xc3c3c300c3c3c300, 0x7272720072727200, 0x9595950095959500,
			0xababab00ababab00, 0x8e8e8e008e8e8e00, 0xbababa00bababa00, 0x7a7a7a007a7a7a00,
			0xb3b3b300b3b3b300, 0x0202020002020200, 0xb4b4b400b4b4b400, 0xadadad00adadad00,
			0xa2a2a200a2a2a200, 0xacacac00acacac00, 0xd8d8d800d8d8d800, 0x9a9a9a009a9a9a00,
			0x1717170017171700, 0x1a1a1a001a1a1a00, 0x3535350035353500, 0xcccccc00cccccc00,
			0xf7f7f700f7f7f700, 0x9999990099999900, 0x6161610061616100, 0x5a5a5a005a5a5a00,
			0xe8e8e800e8e8e800, 0x2424240024242400, 0x5656560056565600, 0x4040400040404000,
			0xe1e1e100e1e1e100, 0x6363630063636300, 0x0909090009090900, 0x3333330033333300,
			0xbfbfbf00bfbfbf00, 0x9898980098989800, 0x9797970097979700, 0x8585850085858500,
			0x6868680068686800, 0xfcfcfc00fcfcfc00, 0xececec00ececec00, 0x0a0a0a000a0a0a00,
			0xdadada00dadada00, 0x6f6f6f006f6f6f00, 0x5353530053535300, 0x6262620062626200,
			0xa3a3a300a3a3a300, 0x2e2e2e002e2e2e00, 0x0808080008080800, 0xafafaf00afafaf00,
			0x2828280028282800, 0xb0b0b000b0b0b000, 0x7474740074747400, 0xc2c2c200c2c2c200,
			0xbdbdbd00bdbdbd00, 0x3636360036363600, 0x2222220022222200, 0x3838380038383800,
			0x6464640064646400, 0x1e1e1e001e1e1e00, 0x3939390039393900, 0x2c2c2c002c2c2c00,
			0xa6a6a600a6a6a600, 0x3030300030303000, 0xe5e5e500e5e5e500, 0x4444440044444400,
			0xfdfdfd00fdfdfd00, 0x8888880088888800, 0x9f9f9f009f9f9f00, 0x6565650065656500,
			0x8787870087878700, 0x6b6b6b006b6b6b00, 0xf4f4f400f4f4f400, 0x2323230023232300,
			0x4848480048484800, 0x1010100010101000, 0xd1d1d100d1d1d100, 0x5151510051515100,
			0xc0c0c000c0c0c000, 0xf9f9f900f9f9f900, 0xd2d2d200d2d2d200, 0xa0a0a000a0a0a000,
			0x5555550055555500, 0xa1a1a100a1a1a100, 0x4141410041414100, 0xfafafa00fafafa00,
			0x4343430043434300, 0x1313130013131300, 0xc4c4c400c4c4c400, 0x2f2f2f002f2f2f00,
			0xa8a8a800a8a8a800, 0xb6b6b600b6b6b600, 0x3c3c3c003c3c3c00, 0x2b2b2b002b2b2b00,
			0xc1c1c100c1c1c100, 0xffffff00ffffff00, 0xc8c8c800c8c8c800, 0xa5a5a500a5a5a500,
			0x2020200020202000, 0x8989890089898900, 0x0000000000000000, 0x9090900090909000,
			0x4747470047474700, 0xefefef00efefef00, 0xeaeaea00eaeaea00, 0xb7b7b700b7b7b700,
			0x1515150015151500, 0x0606060006060600, 0xcdcdcd00cdcdcd00, 0xb5b5b500b5b5b500,
			0x1212120012121200, 0x7e7e7e007e7e7e00, 0xbbbbbb00bbbbbb00, 0x2929290029292900,
			0x0f0f0f000f0f0f00, 0xb8b8b800b8b8b800, 0x0707070007070700, 0x0404040004040400,
			0x9b9b9b009b9b9b00, 0x9494940094949400, 0x2121210021212100, 0x6666660066666600,
			0xe6e6e600e6e6e600, 0xcecece00cecece00, 0xededed00ededed00, 0xe7e7e700e7e7e700,
			0x3b3b3b003b3b3b00, 0xfefefe00fefefe00, 0x7f7f7f007f7f7f00, 0xc5c5c500c5c5c500,
			0xa4a4a400a4a4a400, 0x3737370037373700, 0xb1b1b100b1b1b100, 0x4c4c4c004c4c4c00,
			0x9191910091919100, 0x6e6e6e006e6e6e00, 0x8d8d8d008d8d8d00, 0x7676760076767600,
			0x0303030003030300, 0x2d2d2d002d2d2d00, 0xdedede00dedede00, 0x9696960096969600,
			0x2626260026262600, 0x7d7d7d007d7d7d00, 0xc6c6c600c6c6c600, 0x5c5c5c005c5c5c00,
			0xd3d3d300d3d3d300, 0xf2f2f200f2f2f200, 0x4f4f4f004f4f4f00, 0x1919190019191900,
			0x3f3f3f003f3f3f00, 0xdcdcdc00dcdcdc00, 0x7979790079797900, 0x1d1d1d001d1d1d00,
			0x5252520052525200, 0xebebeb00ebebeb00, 0xf3f3f300f3f3f300, 0x6d6d6d006d6d6d00,
			0x5e5e5e005e5e5e00, 0xfbfbfb00fbfbfb00, 0x6969690069696900, 0xb2b2b200b2b2b200,
			0xf0f0f000f0f0f000, 0x3131310031313100, 0x0c0c0c000c0c0c00, 0xd4d4d400d4d4d400,
			0xcfcfcf00cfcfcf00, 0x8c8c8c008c8c8c00, 0xe2e2e200e2e2e200, 0x7575750075757500,
			0xa9a9a900a9a9a900, 0x4a4a4a004a4a4a00, 0x5757570057575700, 0x8484840084848400,
			0x1111110011111100, 0x4545450045454500, 0x1b1b1b001b1b1b00, 0xf5f5f500f5f5f500,
			0xe4e4e400e4e4e400, 0x0e0e0e000e0e0e00, 0x7373730073737300, 0xaaaaaa00aaaaaa00,
			0xf1f1f100f1f1f100, 0xdddddd00dddddd00, 0x5959590059595900, 0x1414140014141400,
			0x6c6c6c006c6c6c00, 0x9292920092929200, 0x5454540054545400, 0xd0d0d000d0d0d000,
			0x7878780078787800, 0x7070700070707000, 0xe3e3e300e3e3e300, 0x4949490049494900,
			0x8080800080808000, 0x5050500050505000, 0xa7a7a700a7a7a700, 0xf6f6f600f6f6f600,
			0x7777770077777700, 0x9393930093939300, 0x8686860086868600, 0x8383830083838300,
			0x2a2a2a002a2a2a00, 0xc7c7c700c7c7c700, 0x5b5b5b005b5b5b00, 0xe9e9e900e9e9e900,
			0xeeeeee00eeeeee00, 0x8f8f8f008f8f8f00, 0x0101010001010100, 0x3d3d3d003d3d3d00,
		};
		static ulong[] SP6 = new ulong[] {
			0x3838003838380038, 0x4141004141410041, 0x1616001616160016, 0x7676007676760076,
			0xd9d900d9d9d900d9, 0x9393009393930093, 0x6060006060600060, 0xf2f200f2f2f200f2,
			0x7272007272720072, 0xc2c200c2c2c200c2, 0xabab00ababab00ab, 0x9a9a009a9a9a009a,
			0x7575007575750075, 0x0606000606060006, 0x5757005757570057, 0xa0a000a0a0a000a0,
			0x9191009191910091, 0xf7f700f7f7f700f7, 0xb5b500b5b5b500b5, 0xc9c900c9c9c900c9,
			0xa2a200a2a2a200a2, 0x8c8c008c8c8c008c, 0xd2d200d2d2d200d2, 0x9090009090900090,
			0xf6f600f6f6f600f6, 0x0707000707070007, 0xa7a700a7a7a700a7, 0x2727002727270027,
			0x8e8e008e8e8e008e, 0xb2b200b2b2b200b2, 0x4949004949490049, 0xdede00dedede00de,
			0x4343004343430043, 0x5c5c005c5c5c005c, 0xd7d700d7d7d700d7, 0xc7c700c7c7c700c7,
			0x3e3e003e3e3e003e, 0xf5f500f5f5f500f5, 0x8f8f008f8f8f008f, 0x6767006767670067,
			0x1f1f001f1f1f001f, 0x1818001818180018, 0x6e6e006e6e6e006e, 0xafaf00afafaf00af,
			0x2f2f002f2f2f002f, 0xe2e200e2e2e200e2, 0x8585008585850085, 0x0d0d000d0d0d000d,
			0x5353005353530053, 0xf0f000f0f0f000f0, 0x9c9c009c9c9c009c, 0x6565006565650065,
			0xeaea00eaeaea00ea, 0xa3a300a3a3a300a3, 0xaeae00aeaeae00ae, 0x9e9e009e9e9e009e,
			0xecec00ececec00ec, 0x8080008080800080, 0x2d2d002d2d2d002d, 0x6b6b006b6b6b006b,
			0xa8a800a8a8a800a8, 0x2b2b002b2b2b002b, 0x3636003636360036, 0xa6a600a6a6a600a6,
			0xc5c500c5c5c500c5, 0x8686008686860086, 0x4d4d004d4d4d004d, 0x3333003333330033,
			0xfdfd00fdfdfd00fd, 0x6666006666660066, 0x5858005858580058, 0x9696009696960096,
			0x3a3a003a3a3a003a, 0x0909000909090009, 0x9595009595950095, 0x1010001010100010,
			0x7878007878780078, 0xd8d800d8d8d800d8, 0x4242004242420042, 0xcccc00cccccc00cc,
			0xefef00efefef00ef, 0x2626002626260026, 0xe5e500e5e5e500e5, 0x6161006161610061,
			0x1a1a001a1a1a001a, 0x3f3f003f3f3f003f, 0x3b3b003b3b3b003b, 0x8282008282820082,
			0xb6b600b6b6b600b6, 0xdbdb00dbdbdb00db, 0xd4d400d4d4d400d4, 0x9898009898980098,
			0xe8e800e8e8e800e8, 0x8b8b008b8b8b008b, 0x0202000202020002, 0xebeb00ebebeb00eb,
			0x0a0a000a0a0a000a, 0x2c2c002c2c2c002c, 0x1d1d001d1d1d001d, 0xb0b000b0b0b000b0,
			0x6f6f006f6f6f006f, 0x8d8d008d8d8d008d, 0x8888008888880088, 0x0e0e000e0e0e000e,
			0x1919001919190019, 0x8787008787870087, 0x4e4e004e4e4e004e, 0x0b0b000b0b0b000b,
			0xa9a900a9a9a900a9, 0x0c0c000c0c0c000c, 0x7979007979790079, 0x1111001111110011,
			0x7f7f007f7f7f007f, 0x2222002222220022, 0xe7e700e7e7e700e7, 0x5959005959590059,
			0xe1e100e1e1e100e1, 0xdada00dadada00da, 0x3d3d003d3d3d003d, 0xc8c800c8c8c800c8,
			0x1212001212120012, 0x0404000404040004, 0x7474007474740074, 0x5454005454540054,
			0x3030003030300030, 0x7e7e007e7e7e007e, 0xb4b400b4b4b400b4, 0x2828002828280028,
			0x5555005555550055, 0x6868006868680068, 0x5050005050500050, 0xbebe00bebebe00be,
			0xd0d000d0d0d000d0, 0xc4c400c4c4c400c4, 0x3131003131310031, 0xcbcb00cbcbcb00cb,
			0x2a2a002a2a2a002a, 0xadad00adadad00ad, 0x0f0f000f0f0f000f, 0xcaca00cacaca00ca,
			0x7070007070700070, 0xffff00ffffff00ff, 0x3232003232320032, 0x6969006969690069,
			0x0808000808080008, 0x6262006262620062, 0x0000000000000000, 0x2424002424240024,
			0xd1d100d1d1d100d1, 0xfbfb00fbfbfb00fb, 0xbaba00bababa00ba, 0xeded00ededed00ed,
			0x4545004545450045, 0x8181008181810081, 0x7373007373730073, 0x6d6d006d6d6d006d,
			0x8484008484840084, 0x9f9f009f9f9f009f, 0xeeee00eeeeee00ee, 0x4a4a004a4a4a004a,
			0xc3c300c3c3c300c3, 0x2e2e002e2e2e002e, 0xc1c100c1c1c100c1, 0x0101000101010001,
			0xe6e600e6e6e600e6, 0x2525002525250025, 0x4848004848480048, 0x9999009999990099,
			0xb9b900b9b9b900b9, 0xb3b300b3b3b300b3, 0x7b7b007b7b7b007b, 0xf9f900f9f9f900f9,
			0xcece00cecece00ce, 0xbfbf00bfbfbf00bf, 0xdfdf00dfdfdf00df, 0x7171007171710071,
			0x2929002929290029, 0xcdcd00cdcdcd00cd, 0x6c6c006c6c6c006c, 0x1313001313130013,
			0x6464006464640064, 0x9b9b009b9b9b009b, 0x6363006363630063, 0x9d9d009d9d9d009d,
			0xc0c000c0c0c000c0, 0x4b4b004b4b4b004b, 0xb7b700b7b7b700b7, 0xa5a500a5a5a500a5,
			0x8989008989890089, 0x5f5f005f5f5f005f, 0xb1b100b1b1b100b1, 0x1717001717170017,
			0xf4f400f4f4f400f4, 0xbcbc00bcbcbc00bc, 0xd3d300d3d3d300d3, 0x4646004646460046,
			0xcfcf00cfcfcf00cf, 0x3737003737370037, 0x5e5e005e5e5e005e, 0x4747004747470047,
			0x9494009494940094, 0xfafa00fafafa00fa, 0xfcfc00fcfcfc00fc, 0x5b5b005b5b5b005b,
			0x9797009797970097, 0xfefe00fefefe00fe, 0x5a5a005a5a5a005a, 0xacac00acacac00ac,
			0x3c3c003c3c3c003c, 0x4c4c004c4c4c004c, 0x0303000303030003, 0x3535003535350035,
			0xf3f300f3f3f300f3, 0x2323002323230023, 0xb8b800b8b8b800b8, 0x5d5d005d5d5d005d,
			0x6a6a006a6a6a006a, 0x9292009292920092, 0xd5d500d5d5d500d5, 0x2121002121210021,
			0x4444004444440044, 0x5151005151510051, 0xc6c600c6c6c600c6, 0x7d7d007d7d7d007d,
			0x3939003939390039, 0x8383008383830083, 0xdcdc00dcdcdc00dc, 0xaaaa00aaaaaa00aa,
			0x7c7c007c7c7c007c, 0x7777007777770077, 0x5656005656560056, 0x0505000505050005,
			0x1b1b001b1b1b001b, 0xa4a400a4a4a400a4, 0x1515001515150015, 0x3434003434340034,
			0x1e1e001e1e1e001e, 0x1c1c001c1c1c001c, 0xf8f800f8f8f800f8, 0x5252005252520052,
			0x2020002020200020, 0x1414001414140014, 0xe9e900e9e9e900e9, 0xbdbd00bdbdbd00bd,
			0xdddd00dddddd00dd, 0xe4e400e4e4e400e4, 0xa1a100a1a1a100a1, 0xe0e000e0e0e000e0,
			0x8a8a008a8a8a008a, 0xf1f100f1f1f100f1, 0xd6d600d6d6d600d6, 0x7a7a007a7a7a007a,
			0xbbbb00bbbbbb00bb, 0xe3e300e3e3e300e3, 0x4040004040400040, 0x4f4f004f4f4f004f,
		};
		static ulong[] SP7 = new ulong[] {
			0x7000707070007070, 0x2c002c2c2c002c2c, 0xb300b3b3b300b3b3, 0xc000c0c0c000c0c0,
			0xe400e4e4e400e4e4, 0x5700575757005757, 0xea00eaeaea00eaea, 0xae00aeaeae00aeae,
			0x2300232323002323, 0x6b006b6b6b006b6b, 0x4500454545004545, 0xa500a5a5a500a5a5,
			0xed00ededed00eded, 0x4f004f4f4f004f4f, 0x1d001d1d1d001d1d, 0x9200929292009292,
			0x8600868686008686, 0xaf00afafaf00afaf, 0x7c007c7c7c007c7c, 0x1f001f1f1f001f1f,
			0x3e003e3e3e003e3e, 0xdc00dcdcdc00dcdc, 0x5e005e5e5e005e5e, 0x0b000b0b0b000b0b,
			0xa600a6a6a600a6a6, 0x3900393939003939, 0xd500d5d5d500d5d5, 0x5d005d5d5d005d5d,
			0xd900d9d9d900d9d9, 0x5a005a5a5a005a5a, 0x5100515151005151, 0x6c006c6c6c006c6c,
			0x8b008b8b8b008b8b, 0x9a009a9a9a009a9a, 0xfb00fbfbfb00fbfb, 0xb000b0b0b000b0b0,
			0x7400747474007474, 0x2b002b2b2b002b2b, 0xf000f0f0f000f0f0, 0x8400848484008484,
			0xdf00dfdfdf00dfdf, 0xcb00cbcbcb00cbcb, 0x3400343434003434, 0x7600767676007676,
			0x6d006d6d6d006d6d, 0xa900a9a9a900a9a9, 0xd100d1d1d100d1d1, 0x0400040404000404,
			0x1400141414001414, 0x3a003a3a3a003a3a, 0xde00dedede00dede, 0x1100111111001111,
			0x3200323232003232, 0x9c009c9c9c009c9c, 0x5300535353005353, 0xf200f2f2f200f2f2,
			0xfe00fefefe00fefe, 0xcf00cfcfcf00cfcf, 0xc300c3c3c300c3c3, 0x7a007a7a7a007a7a,
			0x2400242424002424, 0xe800e8e8e800e8e8, 0x6000606060006060, 0x6900696969006969,
			0xaa00aaaaaa00aaaa, 0xa000a0a0a000a0a0, 0xa100a1a1a100a1a1, 0x6200626262006262,
			0x5400545454005454, 0x1e001e1e1e001e1e, 0xe000e0e0e000e0e0, 0x6400646464006464,
			0x1000101010001010, 0x0000000000000000, 0xa300a3a3a300a3a3, 0x7500757575007575,
			0x8a008a8a8a008a8a, 0xe600e6e6e600e6e6, 0x0900090909000909, 0xdd00dddddd00dddd,
			0x8700878787008787, 0x8300838383008383, 0xcd00cdcdcd00cdcd, 0x9000909090009090,
			0x7300737373007373, 0xf600f6f6f600f6f6, 0x9d009d9d9d009d9d, 0xbf00bfbfbf00bfbf,
			0x5200525252005252, 0xd800d8d8d800d8d8, 0xc800c8c8c800c8c8, 0xc600c6c6c600c6c6,
			0x8100818181008181, 0x6f006f6f6f006f6f, 0x1300131313001313, 0x6300636363006363,
			0xe900e9e9e900e9e9, 0xa700a7a7a700a7a7, 0x9f009f9f9f009f9f, 0xbc00bcbcbc00bcbc,
			0x2900292929002929, 0xf900f9f9f900f9f9, 0x2f002f2f2f002f2f, 0xb400b4b4b400b4b4,
			0x7800787878007878, 0x0600060606000606, 0xe700e7e7e700e7e7, 0x7100717171007171,
			0xd400d4d4d400d4d4, 0xab00ababab00abab, 0x8800888888008888, 0x8d008d8d8d008d8d,
			0x7200727272007272, 0xb900b9b9b900b9b9, 0xf800f8f8f800f8f8, 0xac00acacac00acac,
			0x3600363636003636, 0x2a002a2a2a002a2a, 0x3c003c3c3c003c3c, 0xf100f1f1f100f1f1,
			0x4000404040004040, 0xd300d3d3d300d3d3, 0xbb00bbbbbb00bbbb, 0x4300434343004343,
			0x1500151515001515, 0xad00adadad00adad, 0x7700777777007777, 0x8000808080008080,
			0x8200828282008282, 0xec00ececec00ecec, 0x2700272727002727, 0xe500e5e5e500e5e5,
			0x8500858585008585, 0x3500353535003535, 0x0c000c0c0c000c0c, 0x4100414141004141,
			0xef00efefef00efef, 0x9300939393009393, 0x1900191919001919, 0x2100212121002121,
			0x0e000e0e0e000e0e, 0x4e004e4e4e004e4e, 0x6500656565006565, 0xbd00bdbdbd00bdbd,
			0xb800b8b8b800b8b8, 0x8f008f8f8f008f8f, 0xeb00ebebeb00ebeb, 0xce00cecece00cece,
			0x3000303030003030, 0x5f005f5f5f005f5f, 0xc500c5c5c500c5c5, 0x1a001a1a1a001a1a,
			0xe100e1e1e100e1e1, 0xca00cacaca00caca, 0x4700474747004747, 0x3d003d3d3d003d3d,
			0x0100010101000101, 0xd600d6d6d600d6d6, 0x5600565656005656, 0x4d004d4d4d004d4d,
			0x0d000d0d0d000d0d, 0x6600666666006666, 0xcc00cccccc00cccc, 0x2d002d2d2d002d2d,
			0x1200121212001212, 0x2000202020002020, 0xb100b1b1b100b1b1, 0x9900999999009999,
			0x4c004c4c4c004c4c, 0xc200c2c2c200c2c2, 0x7e007e7e7e007e7e, 0x0500050505000505,
			0xb700b7b7b700b7b7, 0x3100313131003131, 0x1700171717001717, 0xd700d7d7d700d7d7,
			0x5800585858005858, 0x6100616161006161, 0x1b001b1b1b001b1b, 0x1c001c1c1c001c1c,
			0x0f000f0f0f000f0f, 0x1600161616001616, 0x1800181818001818, 0x2200222222002222,
			0x4400444444004444, 0xb200b2b2b200b2b2, 0xb500b5b5b500b5b5, 0x9100919191009191,
			0x0800080808000808, 0xa800a8a8a800a8a8, 0xfc00fcfcfc00fcfc, 0x5000505050005050,
			0xd000d0d0d000d0d0, 0x7d007d7d7d007d7d, 0x8900898989008989, 0x9700979797009797,
			0x5b005b5b5b005b5b, 0x9500959595009595, 0xff00ffffff00ffff, 0xd200d2d2d200d2d2,
			0xc400c4c4c400c4c4, 0x4800484848004848, 0xf700f7f7f700f7f7, 0xdb00dbdbdb00dbdb,
			0x0300030303000303, 0xda00dadada00dada, 0x3f003f3f3f003f3f, 0x9400949494009494,
			0x5c005c5c5c005c5c, 0x0200020202000202, 0x4a004a4a4a004a4a, 0x3300333333003333,
			0x6700676767006767, 0xf300f3f3f300f3f3, 0x7f007f7f7f007f7f, 0xe200e2e2e200e2e2,
			0x9b009b9b9b009b9b, 0x2600262626002626, 0x3700373737003737, 0x3b003b3b3b003b3b,
			0x9600969696009696, 0x4b004b4b4b004b4b, 0xbe00bebebe00bebe, 0x2e002e2e2e002e2e,
			0x7900797979007979, 0x8c008c8c8c008c8c, 0x6e006e6e6e006e6e, 0x8e008e8e8e008e8e,
			0xf500f5f5f500f5f5, 0xb600b6b6b600b6b6, 0xfd00fdfdfd00fdfd, 0x5900595959005959,
			0x9800989898009898, 0x6a006a6a6a006a6a, 0x4600464646004646, 0xba00bababa00baba,
			0x2500252525002525, 0x4200424242004242, 0xa200a2a2a200a2a2, 0xfa00fafafa00fafa,
			0x0700070707000707, 0x5500555555005555, 0xee00eeeeee00eeee, 0x0a000a0a0a000a0a,
			0x4900494949004949, 0x6800686868006868, 0x3800383838003838, 0xa400a4a4a400a4a4,
			0x2800282828002828, 0x7b007b7b7b007b7b, 0xc900c9c9c900c9c9, 0xc100c1c1c100c1c1,
			0xe300e3e3e300e3e3, 0xf400f4f4f400f4f4, 0xc700c7c7c700c7c7, 0x9e009e9e9e009e9e,
		};
		static ulong[] SP8 = new ulong[] {
			0x0070707000707070, 0x0082828200828282, 0x002c2c2c002c2c2c, 0x00ececec00ececec,
			0x00b3b3b300b3b3b3, 0x0027272700272727, 0x00c0c0c000c0c0c0, 0x00e5e5e500e5e5e5,
			0x00e4e4e400e4e4e4, 0x0085858500858585, 0x0057575700575757, 0x0035353500353535,
			0x00eaeaea00eaeaea, 0x000c0c0c000c0c0c, 0x00aeaeae00aeaeae, 0x0041414100414141,
			0x0023232300232323, 0x00efefef00efefef, 0x006b6b6b006b6b6b, 0x0093939300939393,
			0x0045454500454545, 0x0019191900191919, 0x00a5a5a500a5a5a5, 0x0021212100212121,
			0x00ededed00ededed, 0x000e0e0e000e0e0e, 0x004f4f4f004f4f4f, 0x004e4e4e004e4e4e,
			0x001d1d1d001d1d1d, 0x0065656500656565, 0x0092929200929292, 0x00bdbdbd00bdbdbd,
			0x0086868600868686, 0x00b8b8b800b8b8b8, 0x00afafaf00afafaf, 0x008f8f8f008f8f8f,
			0x007c7c7c007c7c7c, 0x00ebebeb00ebebeb, 0x001f1f1f001f1f1f, 0x00cecece00cecece,
			0x003e3e3e003e3e3e, 0x0030303000303030, 0x00dcdcdc00dcdcdc, 0x005f5f5f005f5f5f,
			0x005e5e5e005e5e5e, 0x00c5c5c500c5c5c5, 0x000b0b0b000b0b0b, 0x001a1a1a001a1a1a,
			0x00a6a6a600a6a6a6, 0x00e1e1e100e1e1e1, 0x0039393900393939, 0x00cacaca00cacaca,
			0x00d5d5d500d5d5d5, 0x0047474700474747, 0x005d5d5d005d5d5d, 0x003d3d3d003d3d3d,
			0x00d9d9d900d9d9d9, 0x0001010100010101, 0x005a5a5a005a5a5a, 0x00d6d6d600d6d6d6,
			0x0051515100515151, 0x0056565600565656, 0x006c6c6c006c6c6c, 0x004d4d4d004d4d4d,
			0x008b8b8b008b8b8b, 0x000d0d0d000d0d0d, 0x009a9a9a009a9a9a, 0x0066666600666666,
			0x00fbfbfb00fbfbfb, 0x00cccccc00cccccc, 0x00b0b0b000b0b0b0, 0x002d2d2d002d2d2d,
			0x0074747400747474, 0x0012121200121212, 0x002b2b2b002b2b2b, 0x0020202000202020,
			0x00f0f0f000f0f0f0, 0x00b1b1b100b1b1b1, 0x0084848400848484, 0x0099999900999999,
			0x00dfdfdf00dfdfdf, 0x004c4c4c004c4c4c, 0x00cbcbcb00cbcbcb, 0x00c2c2c200c2c2c2,
			0x0034343400343434, 0x007e7e7e007e7e7e, 0x0076767600767676, 0x0005050500050505,
			0x006d6d6d006d6d6d, 0x00b7b7b700b7b7b7, 0x00a9a9a900a9a9a9, 0x0031313100313131,
			0x00d1d1d100d1d1d1, 0x0017171700171717, 0x0004040400040404, 0x00d7d7d700d7d7d7,
			0x0014141400141414, 0x0058585800585858, 0x003a3a3a003a3a3a, 0x0061616100616161,
			0x00dedede00dedede, 0x001b1b1b001b1b1b, 0x0011111100111111, 0x001c1c1c001c1c1c,
			0x0032323200323232, 0x000f0f0f000f0f0f, 0x009c9c9c009c9c9c, 0x0016161600161616,
			0x0053535300535353, 0x0018181800181818, 0x00f2f2f200f2f2f2, 0x0022222200222222,
			0x00fefefe00fefefe, 0x0044444400444444, 0x00cfcfcf00cfcfcf, 0x00b2b2b200b2b2b2,
			0x00c3c3c300c3c3c3, 0x00b5b5b500b5b5b5, 0x007a7a7a007a7a7a, 0x0091919100919191,
			0x0024242400242424, 0x0008080800080808, 0x00e8e8e800e8e8e8, 0x00a8a8a800a8a8a8,
			0x0060606000606060, 0x00fcfcfc00fcfcfc, 0x0069696900696969, 0x0050505000505050,
			0x00aaaaaa00aaaaaa, 0x00d0d0d000d0d0d0, 0x00a0a0a000a0a0a0, 0x007d7d7d007d7d7d,
			0x00a1a1a100a1a1a1, 0x0089898900898989, 0x0062626200626262, 0x0097979700979797,
			0x0054545400545454, 0x005b5b5b005b5b5b, 0x001e1e1e001e1e1e, 0x0095959500959595,
			0x00e0e0e000e0e0e0, 0x00ffffff00ffffff, 0x0064646400646464, 0x00d2d2d200d2d2d2,
			0x0010101000101010, 0x00c4c4c400c4c4c4, 0x0000000000000000, 0x0048484800484848,
			0x00a3a3a300a3a3a3, 0x00f7f7f700f7f7f7, 0x0075757500757575, 0x00dbdbdb00dbdbdb,
			0x008a8a8a008a8a8a, 0x0003030300030303, 0x00e6e6e600e6e6e6, 0x00dadada00dadada,
			0x0009090900090909, 0x003f3f3f003f3f3f, 0x00dddddd00dddddd, 0x0094949400949494,
			0x0087878700878787, 0x005c5c5c005c5c5c, 0x0083838300838383, 0x0002020200020202,
			0x00cdcdcd00cdcdcd, 0x004a4a4a004a4a4a, 0x0090909000909090, 0x0033333300333333,
			0x0073737300737373, 0x0067676700676767, 0x00f6f6f600f6f6f6, 0x00f3f3f300f3f3f3,
			0x009d9d9d009d9d9d, 0x007f7f7f007f7f7f, 0x00bfbfbf00bfbfbf, 0x00e2e2e200e2e2e2,
			0x0052525200525252, 0x009b9b9b009b9b9b, 0x00d8d8d800d8d8d8, 0x0026262600262626,
			0x00c8c8c800c8c8c8, 0x0037373700373737, 0x00c6c6c600c6c6c6, 0x003b3b3b003b3b3b,
			0x0081818100818181, 0x0096969600969696, 0x006f6f6f006f6f6f, 0x004b4b4b004b4b4b,
			0x0013131300131313, 0x00bebebe00bebebe, 0x0063636300636363, 0x002e2e2e002e2e2e,
			0x00e9e9e900e9e9e9, 0x0079797900797979, 0x00a7a7a700a7a7a7, 0x008c8c8c008c8c8c,
			0x009f9f9f009f9f9f, 0x006e6e6e006e6e6e, 0x00bcbcbc00bcbcbc, 0x008e8e8e008e8e8e,
			0x0029292900292929, 0x00f5f5f500f5f5f5, 0x00f9f9f900f9f9f9, 0x00b6b6b600b6b6b6,
			0x002f2f2f002f2f2f, 0x00fdfdfd00fdfdfd, 0x00b4b4b400b4b4b4, 0x0059595900595959,
			0x0078787800787878, 0x0098989800989898, 0x0006060600060606, 0x006a6a6a006a6a6a,
			0x00e7e7e700e7e7e7, 0x0046464600464646, 0x0071717100717171, 0x00bababa00bababa,
			0x00d4d4d400d4d4d4, 0x0025252500252525, 0x00ababab00ababab, 0x0042424200424242,
			0x0088888800888888, 0x00a2a2a200a2a2a2, 0x008d8d8d008d8d8d, 0x00fafafa00fafafa,
			0x0072727200727272, 0x0007070700070707, 0x00b9b9b900b9b9b9, 0x0055555500555555,
			0x00f8f8f800f8f8f8, 0x00eeeeee00eeeeee, 0x00acacac00acacac, 0x000a0a0a000a0a0a,
			0x0036363600363636, 0x0049494900494949, 0x002a2a2a002a2a2a, 0x0068686800686868,
			0x003c3c3c003c3c3c, 0x0038383800383838, 0x00f1f1f100f1f1f1, 0x00a4a4a400a4a4a4,
			0x0040404000404040, 0x0028282800282828, 0x00d3d3d300d3d3d3, 0x007b7b7b007b7b7b,
			0x00bbbbbb00bbbbbb, 0x00c9c9c900c9c9c9, 0x0043434300434343, 0x00c1c1c100c1c1c1,
			0x0015151500151515, 0x00e3e3e300e3e3e3, 0x00adadad00adadad, 0x00f4f4f400f4f4f4,
			0x0077777700777777, 0x00c7c7c700c7c7c7, 0x0080808000808080, 0x009e9e9e009e9e9e,
		};
		#endregion

		#region Data
		static ulong[] SIGMA =
		{
			0x8b90cc3b7f669ea0,
			0xb273aa4c58e87ab6,
			0xbe824fe92f37efc6,
			0x1c6fd3f1a553ff54,
			0x1d2d68defa27e510,
			0xfdc1e6b3c28856b0,
		};

		static int [] KIDX1 = { 0 , 0 , 8 , 8 , 0 , 0 , 8 , 8 , 8 , 8 , 0 , 0 , 8 , 0 , 8 , 8 , 0 , 0 , 0 , 0 , 8, 8, 0, 0, 8, 8 };

		static int[] KSFT2 = 
		{
			0, 64, 0, 64, 15, 79, 15, 79, 30, 94, 30, 94, 45, 109, 45, 109, 60, 124, 
			60, 124, 60, 124, 77, 13, 77, 13, 94, 30, 94, 30, 111, 47, 111, 47 
		};

		static int[] KIDX2 =
		{
			0, 0, 12, 12, 4, 4, 8, 8, 4, 4, 12, 12, 0, 0, 8, 8, 0, 0, 4, 4, 12, 12, 
			0, 0, 8, 8, 4, 4, 8, 8, 0, 0, 12, 12 
		};

		static int[] KSFT1 =
		{
			0, 64, 0, 64, 15, 79, 15, 79, 30, 94, 45, 109, 45, 124, 60, 124, 77, 13,
			94, 30, 94, 30, 111, 47, 111, 47 
		};
		#endregion

		static unsafe void memcpy64 (ulong* dst, ulong* src, int n)
		{
			for (int i = 0; i < n; i++)
				dst[i] = src[i];
		}

		static unsafe void XorBlock (ulong* x, ulong* y, ulong* z)
		{
			z[0] = x[0] ^ y[0];
			z[1] = x[1] ^ y[1];
		}

		static uint LeftRotate1 (uint value)
		{
			return ((value << 1) & 0xfefefefe) | (((value >> 15) | (value << 17)) & ~0xfefefefe);
		}

		static uint LeftShift (uint value, int shift)
		{
			int bit = shift % 8;
			value >>= (shift - bit);

			for (int i = 0; i < bit; i++)
				value = ((value << 1) & 0xfefefefe) | (((value >> 15) | (value << 17)) & 0x10101);
			
			return (value << bit) >> bit;
		}

		static uint RightShift (uint value, int shift)
		{
			int bit = shift % 8;
			value <<= shift - bit;

			for (int i = 0; i < bit; i++)
				value = ((value >> 1) & 0x7f7f7f7f) | (((value << 15) | (value >> 17)) & 0x80808000);

			return value;
		}

		public static unsafe void Feistel (ulong* x, ulong* k, int key_offset)
		{
			ulong tmp = x[0] ^ k[0];
			x[1] ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];

			tmp = x[1] ^ k[key_offset];
			x[0] ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];
		}

		static unsafe void RotBlock (uint* x, int n, uint* y)
		{
			int r = (n & 31);   /* Must not be 0 */
			int idx = (n >> 5);
			int idx1 = (idx + 1) & 3;
			int idx2 = (idx1 + 1) & 3;

			y[0] = LeftShift (x[idx], r) | RightShift (x[idx1], 32 - r);
			y[1] = LeftShift (x[idx1], r) | RightShift (x[idx2], 32 - r);
		}

		public static unsafe void GenerateKeyTable (byte[] rawKey, ulong[] keyTable)
		{
			ulong* t = stackalloc ulong[8];
			fixed (ulong* pTable = keyTable, pSIGMA = SIGMA)
			fixed (byte* pKey = rawKey) {
				switch (rawKey.Length) {
				case 16: /* 128bit */
					memcpy64 (t, (ulong*)pKey, 2);
					t[2] = t[3] = 0;
					break;
				case 24: /* 192bit */
					memcpy64 (t, (ulong*)pKey, 2);
					t[2] = BitConverter.ToUInt64 (rawKey, 16);
					t[3] = ~t[2];
					break;
				case 32: /* 256bit */
					memcpy64 (t, (ulong*)pKey, 4);
					break;
				default:
					throw new NotSupportedException ();
				}

				XorBlock (t, t + 2, t + 4);
				Feistel (t + 4, pSIGMA, 1);
				XorBlock (t + 4, t, t + 4);
				Feistel (t + 4, pSIGMA + 2, 1);

				if (rawKey.Length == 16) {
					memcpy64 (pTable, t, 2);
					memcpy64 (pTable + 2, t + 4, 2);
					for (int i = 4; i < 26; i += 2) {
						RotBlock (((uint*)t) + KIDX1[i + 0], KSFT1[i + 0], (uint*)(pTable + i));
						RotBlock (((uint*)t) + KIDX1[i + 1], KSFT1[i + 1], (uint*)(pTable + i + 1));
					}
				} else {
					XorBlock (t + 4, t + 2, t + 6);
					Feistel (t + 6, pSIGMA + 4, 1);
					memcpy64 (pTable, t, 2);
					memcpy64 (pTable + 2, t + 6, 2);
					for (int i = 4; i < 34; i += 2) {
						RotBlock (((uint*)t) + KIDX2[i + 0], KSFT2[i + 0], (uint*)(pTable + i));
						RotBlock (((uint*)t) + KIDX2[i + 1], KSFT2[i + 1], (uint*)(pTable + i + 1));
					}
				}
			}
		}

		ulong[] _keyTable;
		ulong _fb0, _fb1;
		int _flayerLimit;
		public CamelliaTransform64LE (byte[] key, byte[] rgbIV, SymmetricAlgorithmPlus algo, bool encrypt)
			: base (algo, encrypt)
		{
			_keyTable = new ulong [272 / 8];
			GenerateKeyTable (key, _keyTable);
			_fb0 = BitConverter.ToUInt64 (rgbIV, 0);
			_fb1 = BitConverter.ToUInt64 (rgbIV, 8);
			_flayerLimit = key.Length == 16 ? 2 : 3;
			_encryptMode = encrypt;
		}

		public unsafe void EncryptBlock (ulong* plaintext, ulong* ciphertext)
		{
			fixed (ulong* pKeyTable = _keyTable) {
				ulong* k = pKeyTable;
				ulong x0 = plaintext[0] ^ k[0] ^ _fb0;
				ulong x1 = plaintext[1] ^ k[1] ^ _fb1;
				for (int i = 0;; i++) {
					ulong tmp = x0 ^ k[2];
					x1 ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];
					tmp = x1 ^ k[3];
					x0 ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];
					tmp = x0 ^ k[4];
					x1 ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];
					tmp = x1 ^ k[5];
					x0 ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];
					tmp = x0 ^ k[6];
					x1 ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];
					tmp = x1 ^ k[7];
					x0 ^= SP1 [(byte)(tmp >>  0)] ^ SP2 [(byte)(tmp >>  8)] ^ SP3 [(byte)(tmp >> 16)] ^ SP4 [(byte)(tmp >> 24)] ^ SP5 [(byte)(tmp >> 32)] ^ SP6 [(byte)(tmp >> 40)] ^ SP7 [(byte)(tmp >> 48)] ^ SP8 [(byte)(tmp >> 56)];
					if (i == _flayerLimit) break;

					k += 8;
					x0 ^= (ulong)LeftRotate1 ((uint)(x0 & k[0])) << 32;
					x0 ^= (x0 | k[0]) >> 32;
					x1 ^= (x1 | k[1]) >> 32;
					x1 ^= (ulong)LeftRotate1 ((uint)(x1 & k[1])) << 32;
				}

				ciphertext[0] = k[8] ^ x1;
				ciphertext[1] = k[9] ^ x0;
			}
		}

		protected override unsafe void EncryptECB (byte[] inputBuffer, int inputOffset, byte[] outputBuffer, int outputOffset)
		{
			fixed (byte* input = &inputBuffer[inputOffset], output = &outputBuffer[outputOffset])
				EncryptBlock ((ulong*)input, (ulong*)output);
		}

		protected override void DecryptECB (byte[] inputBuffer, int inputOffset, byte[] outputBuffer, int outputOffset)
		{
			throw new Exception ("The method or operation is not implemented.");
		}
	}
}
